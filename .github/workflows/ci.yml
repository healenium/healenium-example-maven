name: CI Pipeline

# Specify that the workflow is triggered manually
on:
  workflow_dispatch: # This trigger allows manual execution through the UI

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # 1. Clone the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Set up Java and Maven
    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin' # Use the Temurin JDK distribution
        java-version: '17'      # Specify the Java version (replace with yours if different)
        cache: 'maven'          # Enable dependency caching for Maven


    # 3. Install Docker Compose manually (for older versions)
    - name: Install Docker Compose Manually
      run: |
        curl -L "https://github.com/docker/compose/releases/download/v2.35.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        
    - name: Verify Docker Compose installation
      run: docker compose --version

    # 4. Start all services using Docker Compose
    - name: Start services via Docker Compose
      run: docker compose -f ./infra/docker-compose.yml up -d 

    # 5. Wait for services to be healthy (healthcheck for dependent services)
    - name: Wait for services to be ready
      run: |
        sleep 10 # Wait until all services are accessible
        docker ps

    # 6. Restore a PostgreSQL database dump
    - name: Restore PostgreSQL database dump
      run: |
        docker exec -i postgres-db psql -U healenium_user -d healenium < ./infra/dump.sql
        
    # 7. Build the project and load dependencies
    - name: Build with Maven
      run: mvn compile

    # 8. Run tests
    - name: Run Maven tests
      run: mvn test -Dtest=SimpleTest

    # 9. Save the database dump
    - name: Dump PostgreSQL database
      run: |
        docker exec -i postgres-db pg_dump -U healenium_user -d healenium > ./infra/dump.sql
        
    # 10. Commit the updated database dump to the repository
    - name: Commit and push database dump
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add ./infra/dump.sql
        git commit -m "Auto-update database dump" || echo "No changes to commit."  # Skip commit if the file hasn't changed
        git push origin HEAD:master --force # Force push changes to the repository
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Use token for authentication


    # 11. Finalize by cleaning up containers
    - name: Shutdown services
      if: always()
      run: docker compose -f ./infra/docker-compose.yml down
